<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hotel.asia.mybatis.mapper.ReviewBoardMapper">
	<insert id="write" parameterType="reviewBoard"> <!--  useGeneratedKeys="true" keyColumn="REVIEW_NUM" keyProperty="REVIEW_NUM" -->
		insert into REVIEW_BOARD 
		values
		( (select nvl(max(REVIEW_NUM),0)+1 from REVIEW_BOARD),
		  #{MEM_ID}, #{REVIEW_PASS}, #{REVIEW_SUBJECT}, #{REVIEW_CONTENT}, 
		  sysdate, 0, 0 
		)
	</insert>
	
	<!-- 리뷰 리스트 -->
	<select id="getListCount" parameterType="map" resultType="int">
		select count(*) from REVIEW_BOARD
		<include refid="search_" />
	</select>
	
	<select id="getReviewList" parameterType="map" resultType="reviewBoard">
		select *
		from ( select d.*, rownum rnum
	   		   from (select REVIEW_BOARD.*, nvl(cnt,0) cnt
             		 from REVIEW_BOARD left outer join (select REVIEW_NUM, count(*) cnt
                                                 		from REVIEW_COMMENT
                                                		group by REVIEW_NUM) c
             		 on REVIEW_BOARD.REVIEW_NUM = c.REVIEW_NUM
             		 <include refid="search_" />
             		 order by ${sortBy} desc ) d <!-- orderby는 출력변수이므로 ${} -->
               where rownum &lt;= #{endrow}
     		  ) 
		where rnum &gt;= #{startrow} and rnum &lt;= #{endrow}
	</select>

	<!-- 검색 -->
	<sql id="search_">
		<if test="search_field!=null">
	    	where	           
	        <choose>
	        	<when test="search_field=='REVIEW_SUBJECT'">REVIEW_SUBJECT</when>
	            <when test="search_field=='MEM_ID'">MEM_ID</when>
	        </choose>	  
	        like #{search_word}	     
    	</if>
	</sql>
	
	
	
	<update id="setReadCountUpdate" parameterType="int">
		update REVIEW_BOARD
		set    REVIEW_READCOUNT = REVIEW_READCOUNT + 1
		where  REVIEW_NUM = #{num}
	</update>
	
	<select id="getDetail" parameterType="int" resultType="reviewBoard">
		select *
		from   REVIEW_BOARD
		where  REVIEW_NUM = #{num}
	</select>
	
	<update id="modify" parameterType="reviewBoard">
		update REVIEW_BOARD
	    set    REVIEW_SUBJECT = #{REVIEW_SUBJECT},
		       REVIEW_CONTENT = #{REVIEW_CONTENT}
	    where  REVIEW_NUM = #{REVIEW_NUM}
	</update>
	
	<select id="isReviewWriter" parameterType="map" resultType="reviewBoard">
	    select * from REVIEW_BOARD
	    where    REVIEW_NUM = #{REVIEW_NUM} 
	    and      REVIEW_PASS = #{REVIEW_PASS}
	</select>
	
	<delete id="delete" parameterType="int">
		delete from REVIEW_BOARD
		where  REVIEW_NUM = #{REVIEW_NUM}
	</delete>
	
	<!-- 기존 추천 이력 있는지 확인 -->
	<select id="reviewRecommMem" parameterType="map" resultType="reviewBoard">
	    select * from REVIEW_BOARD_RECOMM
	    where    REVIEW_NUM = #{REVIEW_NUM} 
	    and      MEM_ID = #{MEM_ID}
	</select>
	
	<!-- 1. 추천 성공 -->
	<insert id="reviewRecommTab" parameterType="map">
		insert into REVIEW_BOARD_RECOMM 
		values
		( (select nvl(max(RECOMM_ID), 0)+1 from REVIEW_BOARD_RECOMM),
		   #{REVIEW_NUM}, #{MEM_ID} )
	</insert>
	<update id="reviewRecomm" parameterType="int">
		update REVIEW_BOARD
		set    REVIEW_RECOMM = REVIEW_RECOMM + 1
		where  REVIEW_NUM = #{review_NUM}
	</update>
	<!-- 2. 추천 해제 -->
	<delete id="reviewRecommTabDel" parameterType="map">
		delete from REVIEW_BOARD_RECOMM
		where REVIEW_NUM = #{REVIEW_NUM}
		and   MEM_ID = #{MEM_ID}
	</delete>
	<update id="reviewRecommDel" parameterType="int">
		update REVIEW_BOARD
		set    REVIEW_RECOMM = REVIEW_RECOMM - 1
		where  REVIEW_NUM = #{review_NUM}
	</update>
	
</mapper>